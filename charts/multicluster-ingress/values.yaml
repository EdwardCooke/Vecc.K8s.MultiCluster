# Default values for multiclusterIngress.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

crds:
  enabled: true

apiServer:
  enabled: true
  ingress:
    enabled: true
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  replicas: 2
  service:
    type: ClusterIP
    port: 80
  serviceAccount:
    name: api-server
    annotations: {}
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
  resources:
    limits:
      # 300m is recommended minimum for startup, while running, 100m should be plenty
      cpu: 300m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
  volumeMounts: []
  nodeSelector: {}
  affinity: {}
  tolerations: []
  podLabels:
    component: api-server

dnsServer:
  enabled: true
  replicas: 2
  serviceAccount:
    name: dns-server
    annotations: {}
  service:
    type: LoadBalancer
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
  resources:
    limits:
      # 300m is recommended minimum for startup, while running, 100m should be plenty
      cpu: 300m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
  volumeMounts: []
  nodeSelector: {}
  affinity: {}
  tolerations: []
  podLabels:
    component: dns-server

operator:
  enabled: true
  replicas: 2
  serviceAccount:
    name: operator
    annotations: {}
  service:
    type: LoadBalancer
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
  resources:
    limits:
      # 300m is recommended minimum for startup, while running, 100m should be plenty
      cpu: 300m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
  volumeMounts: []
  nodeSelector: {}
  affinity: {}
  tolerations: []
  podLabels:
    component: operator

orchestrator:
  enabled: true
  replicas: 2
  serviceAccount:
    name: orchestrator
    annotations: {}
  service:
    type: LoadBalancer
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
  resources:
    limits:
      # 300m is recommended minimum for startup, while running, 100m should be plenty
      cpu: 300m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
  volumeMounts: []
  nodeSelector: {}
  affinity: {}
  tolerations: []
  podLabels:
    component: orchestrator

config:
  ################################################################################################
  ### Local cluster configuration
  # Name of the local cluster cache object
  clusterIdentifier: local

  # Minimum log level for the application, can be set to Verbose, Debug, Information, Warning, Error, Fatal, None
  # Sensitive information is always masked, regardless of the log level.
  logLevel: Information

  ################################################################################################
  ### Configuration for the dns server
  ################################################################################################
  # List of nameservers to use for the dns server, these are used in the SOA record
  nameserverNames: []

  # Hostname to use for the dns server, this is used in the SOA record
  dnsHostname: cluster1.domain.tld

  # Default TTL for records in seconds
  defaultRecordTTL: 5

  # port for the dns server pod to listen on, the external service will always be port 53
  listenUDPPort: 1053

  # port for the dns server pod to listen on, the external service will always be port 53
  listenTCPPort: 1053

  # email address to use in the SOA record for the dns server, use .'s instead of @'s
  responsibleEmailAddress: edward.frakkingsweet.com

  ################################################################################################
  ### For cluster healthchecks to determine when to stop sending traffic to a cluster due to failed health checks
  ################################################################################################

  # How frequently to check cluster heart beats in seconds
  heartbeatCheckInterval: 60

  # How long before a heartbeat is missed before pulling the cluster out of the pool in seconds
  heartbeatTimeout: 300

  # How frequent to send heartbeat updates in seconds
  heartbeatSetInterval: 30

  ################################################################################################
  ### Configuration for peer cluster communication
  ################################################################################################
  # You can generate a hash and key set for use in the apiKeys and peers
  # using the following endpoint on the api server /Authentication/Auth?identifier=<clusteridentifier>
  # Identifiers are arbitrary and can be whatever you want as long as it meets the general
  # naming convention for Kubernetes objects (alpha/numeric, less than 63 characters)

  # This is a list of peers that can communicate with us
  # it includes a base 64 encoded hashe of a key and a identifier used by the local cluster
  # that can communicate with this cluster
  apiKeys: []

  # W26VCNAgvtUa5B38iNmFLPUa3hoUYY3L152qJPyJOeQ7UVu0G+XSDL1+lq6zNqnJ8HgVpgJoQulb9KRX690UGQ==
  # - Identifier: remote-1
  #   Key: W26VCNAgvtUa5B38iNmFLPUa3hoUYY3L152qJPyJOeQ7UVu0G+XSDL1+lq6zNqnJ8HgVpgJoQulb9KRX690UGQ==

  # this is the list of peers that we will communicate with and send our updates to
  # it includes the api key, identifier and the url to send the updates to
  peers: []
  # - Identifier: remote-1
  #   Key: abcd
  #   Url: http://remote-1-api-server.domain.tld

rbac:
  enabled: true

image:
  repository: quay.io/edward_cooke/vecc.k8s.multiclusteringress
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""




resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
