apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: operator
    component: dns-server
  name: operator-dns-server
  namespace: mcingress-operator
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: operator
      component: dns-server
  template:
    metadata:
      labels:
        app: operator
        component: dns-server
    spec:
      serviceAccountName: dns-server
      containers:
      - name: dns-server
        args:
        - --dns-server
        env:
        - name: ListenPort
          value: "5000"
        - name: ListenGrpcPort
          value: "1153"
        - name: Namespace
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: mcingress
        image: localhost:5001/multicluster:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: http
        - containerPort: 1153
          name: grpc
        resources:
          limits:
            cpu: 1000m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: token
      - name: coredns
        args:
        - -conf
        - /etc/coredns/Corefile
        command:
        - /coredns
        image: "{{ .Values.dnsServer.coredns.image }}"
        imagePullPolicy: Always
        ports:
        - containerPort: 1053
          protocol: TCP
          name: dns-tcp
        - containerPort: 1053
          protocol: UDP
          name: dns-udp
        - containerPort: 8080
          protocol: TCP
          name: health
        - containerPort: 9153
          protocol: TCP
          name: metrics
        - containerPort: 8181
          protocol: TCP
          name: readiness
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - mountPath: /etc/coredns
          name: coredns-config
      volumes:
      - name: coredns-config
        configMap:
          name: coredns
          items:
          - key: Corefile
            path: Corefile
      - name: token
        projected:
          sources:
          - serviceAccountToken:
              path: token
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: operator
    component: orchestrator
  name: operator-orchestrator
  namespace: mcingress-operator
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: operator
      component: orchestrator
  template:
    metadata:
      labels:
        app: operator
        component: orchestrator
    spec:
      serviceAccountName: orchestrator
      containers:
      - name: orchestrator
        args:
        - --orchestrator
        env:
        - name: KESTREL__ENDPOINTS__HTTP__URL
          value: http://0.0.0.0:5001
        - name: Namespace
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: mcingress
        image: localhost:5001/multicluster:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5001
          name: http
        resources:
          limits:
            cpu: 1000m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: token
      volumes:
      - name: token
        projected:
          sources:
          - serviceAccountToken:
              path: token
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: operator
    component: orchestrator
  name: operator-operator
  namespace: mcingress-operator
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: operator
      component: operator
  template:
    metadata:
      labels:
        app: operator
        component: operator
    spec:
      serviceAccountName: operator
      containers:
      - name: operator
        args:
        - --operator
        env:
        - name: KESTREL__ENDPOINTS__HTTP__URL
          value: http://0.0.0.0:5001
        - name: Namespace
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: mcingress
        image: localhost:5001/multicluster:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5001
          name: http
        resources:
          limits:
            cpu: 1000m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: token
      volumes:
      - name: token
        projected:
          sources:
          - serviceAccountToken:
              path: token
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: operator
    component: api-server
  name: operator-api-server
  namespace: mcingress-operator
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: operator
      component: api-server
  template:
    metadata:
      labels:
        app: operator
        component: api-server
    spec:
      serviceAccountName: api-server
      containers:
      - name: api-server
        args:
        - --front-end
        env:
        - name: KESTREL__ENDPOINTS__HTTP__URL
          value: http://0.0.0.0:5002
        - name: Namespace
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: mcingress
        image: localhost:5001/multicluster:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5002
          hostPort: 5002
          protocol: TCP
          name: http
        resources:
          limits:
            cpu: 1000m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: token
      volumes:
      - name: token
        projected:
          sources:
          - serviceAccountToken:
              path: token
      terminationGracePeriodSeconds: 10